body.menu-open {
  max-height: 100vh;
  max-width: 100vw;
  overflow: hidden;
}

.nav-main {
  @apply relative;

  .nav-menu {
    @apply fixed w-full h-screen flex flex-col bg-red text-white;
    top: 0;
    left: 100vw;
    .nav-menu-item {
      @apply ml-0;
      transition: $short easeOutCirc;

      &:hover {
        @apply ml-6;
      }

      &.active {
        @apply ml-6 font-normal;
      }
    }
  }

  .nav-burger {
    @apply flex flex-col justify-between;
    font-size: inherit;
    width: $burger-width-mobile;
    height: $burger-height-mobile;
    span {
      @apply w-full self-end;
      height: 2px;
      transition: $medium easeOutCirc;
    }

    @mixin hover-child span:first-child, margin-top, 4px;
    @mixin hover-child span:last-child, margin-bottom, 4px;
  }
  &.animating {
    .nav-menu {
      transition: left $short easeInOutCirc;
    }
  }
  &.active {
    .nav-menu {
      left: 0;
    }

    .nav-burger {
      span {
        @apply bg-white;
        margin: 0 !important;
        &:first-child {
          transform: translateY(calc($burger-height-mobile / 2 - 1.5px)) rotate(45deg);
        }
        &:last-child {
          transform: translateY(calc($burger-height-mobile / -2 + 1.5px)) rotate(-45deg);
        }

        &:not(:first-child):not(:last-child) {
          opacity: 0;
        }

      }
    }
  }
}

.header-main {
  &.light {
    .nav-main:not(.active) {
      .nav-burger span {
        @apply bg-green-light;
      }
    }
  }

  &.dark {
        .nav-main:not(.active) {
      .nav-burger span {
        @apply bg-green-dark;
      }
    }
  }
}

@screen lg {
  .nav-main {
    .nav-menu {

      .nav-menu-item {
        &:hover {
          @apply ml-10;
        }

        &.active {
          @apply ml-10;
        }
      }
    }
    .nav-burger-wrapper {
      width: 97px;
      height: 65px;
    }
    .nav-burger {
      span {
        height: 3px;
      }
      width: $burger-width;
      height: $burger-height;
    }

    &.active {
      .nav-burger {
        span {
          &:first-child {
            transform: translateY(calc($burger-height / 2 - 1.5px)) rotate(45deg);
          }

          &:last-child {
            transform: translateY(calc($burger-height / -2 + 1.5px)) rotate(-45deg);
          }
        }
      }
    }
  }
}